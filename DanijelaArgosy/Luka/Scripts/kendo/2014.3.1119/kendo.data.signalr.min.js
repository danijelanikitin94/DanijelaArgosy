(function(n,t){t(["./kendo.data"],n)})(function(){return function(){kendo.data.transports.signalr=kendo.data.RemoteTransport.extend({init:function(n){var r=n&&n.signalr?n.signalr:{},i=r.promise,t;if(!i)throw new Error('The "promise" option must be set.');if(typeof i.done!="function"||typeof i.fail!="function")throw new Error('The "promise" option must be a Promise.');if(this.promise=i,t=r.hub,!t)throw new Error('The "hub" option must be set.');if(typeof t.on!="function"||typeof t.invoke!="function")throw new Error('The "hub" option is not a valid SignalR hub proxy.');this.hub=t;kendo.data.RemoteTransport.fn.init.call(this,n)},push:function(n){var t=this.options.signalr.client||{};if(t.create)this.hub.on(t.create,n.pushCreate);if(t.update)this.hub.on(t.update,n.pushUpdate);if(t.destroy)this.hub.on(t.destroy,n.pushDestroy)},_crud:function(n,t){var f=this.hub,i=this.options.signalr.server,r,u;if(!i||!i[t])throw new Error(kendo.format('The "server.{0}" option must be set.',t));r=[i[t]];u=this.parameterMap(n.data,t);$.isEmptyObject(u)||r.push(u);this.promise.done(function(){f.invoke.apply(f,r).done(n.success).fail(n.error)})},read:function(n){this._crud(n,"read")},create:function(n){this._crud(n,"create")},update:function(n){this._crud(n,"update")},destroy:function(n){this._crud(n,"destroy")}})}(),window.kendo},typeof define=="function"&&define.amd?define:function(n,t){t()});
//# sourceMappingURL=kendo.data.signalr.min.js.map
